{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AuthContext } from \"../../contexts/auth\";\nimport { Background, Container, Logo, AreaInput, Input, SubmitButton, SubmitText } from \"../SignIn/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignUp() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      nome = _useState2[0],\n      setNome = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useContext = useContext(AuthContext),\n      signUp = _useContext.signUp,\n      loadingAuth = _useContext.loadingAuth;\n\n  function handleSignUp() {\n    signUp(email, password, nome);\n  }\n\n  return _jsx(Background, {\n    children: _jsxs(Container, {\n      behavior: Platform.OS === 'ios' ? 'padding' : '',\n      enabled: true,\n      children: [_jsx(AreaInput, {\n        children: _jsx(Input, {\n          placeholder: \"Nome\",\n          autoCorrect: false,\n          autoCapitalize: \"none\",\n          value: nome,\n          onChangeText: function onChangeText(text) {\n            return setNome(text);\n          }\n        })\n      }), _jsx(AreaInput, {\n        children: _jsx(Input, {\n          placeholder: \"Email\",\n          autoCorrect: false,\n          autoCapitalize: \"none\",\n          value: email,\n          onChangeText: function onChangeText(text) {\n            return setEmail(text);\n          }\n        })\n      }), _jsx(AreaInput, {\n        children: _jsx(Input, {\n          placeholder: \"Senha\",\n          autoCorrect: false,\n          autoCapitalize: \"none\",\n          value: password,\n          onChangeText: function onChangeText(text) {\n            return setPassword(text);\n          },\n          secureTextEntry: true\n        })\n      }), _jsx(SubmitButton, {\n        onPress: handleSignUp,\n        children: loadingAuth ? _jsx(ActivityIndicator, {\n          size: 20,\n          color: \"#FFF\"\n        }) : _jsx(SubmitText, {\n          children: \"Cadastrar\"\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/RML-R/Documents/Estudos/app/AppFinancas/src/pages/SignUp/index.js"],"names":["React","useState","useContext","AuthContext","Background","Container","Logo","AreaInput","Input","SubmitButton","SubmitText","SignUp","nome","setNome","email","setEmail","password","setPassword","signUp","loadingAuth","handleSignUp","Platform","OS","text"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;;;AAGA,SAASC,WAAT;AAEA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,IAAhC,EAAsCC,SAAtC,EAAiDC,KAAjD,EAAwDC,YAAxD,EACAC,UADA;;;AAGA,eAAe,SAASC,MAAT,GAAkB;AAC/B,kBAAwBV,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOW,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA0BZ,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOa,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCd,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOe,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,oBAA+Bf,UAAU,CAACC,WAAD,CAAzC;AAAA,MAAQe,MAAR,eAAQA,MAAR;AAAA,MAAgBC,WAAhB,eAAgBA,WAAhB;;AAEA,WAASC,YAAT,GAAuB;AACrBF,IAAAA,MAAM,CAACJ,KAAD,EAAQE,QAAR,EAAkBJ,IAAlB,CAAN;AACD;;AAEF,SACE,KAAC,UAAD;AAAA,cACG,MAAC,SAAD;AACA,MAAA,QAAQ,EAAES,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,EAD9C;AAEA,MAAA,OAAO,MAFP;AAAA,iBAKE,KAAC,SAAD;AAAA,kBACE,KAAC,KAAD;AACA,UAAA,WAAW,EAAC,MADZ;AAEA,UAAA,WAAW,EAAE,KAFb;AAGA,UAAA,cAAc,EAAC,MAHf;AAIA,UAAA,KAAK,EAAEV,IAJP;AAKA,UAAA,YAAY,EAAG,sBAACW,IAAD;AAAA,mBAAUV,OAAO,CAACU,IAAD,CAAjB;AAAA;AALf;AADF,QALF,EAeE,KAAC,SAAD;AAAA,kBACE,KAAC,KAAD;AACA,UAAA,WAAW,EAAC,OADZ;AAEA,UAAA,WAAW,EAAE,KAFb;AAGA,UAAA,cAAc,EAAC,MAHf;AAIA,UAAA,KAAK,EAAET,KAJP;AAKA,UAAA,YAAY,EAAG,sBAACS,IAAD;AAAA,mBAAUR,QAAQ,CAACQ,IAAD,CAAlB;AAAA;AALf;AADF,QAfF,EAyBE,KAAC,SAAD;AAAA,kBACE,KAAC,KAAD;AACA,UAAA,WAAW,EAAC,OADZ;AAEA,UAAA,WAAW,EAAE,KAFb;AAGA,UAAA,cAAc,EAAC,MAHf;AAIA,UAAA,KAAK,EAAEP,QAJP;AAKA,UAAA,YAAY,EAAG,sBAACO,IAAD;AAAA,mBAAUN,WAAW,CAACM,IAAD,CAArB;AAAA,WALf;AAMA,UAAA,eAAe,EAAE;AANjB;AADF,QAzBF,EAoCA,KAAC,YAAD;AAAc,QAAA,OAAO,EAAEH,YAAvB;AAAA,kBAEMD,WAAW,GACT,KAAC,iBAAD;AAAmB,UAAA,IAAI,EAAE,EAAzB;AAA6B,UAAA,KAAK,EAAC;AAAnC,UADS,GAGT,KAAC,UAAD;AAAA;AAAA;AALR,QApCA;AAAA;AADH,IADF;AAmDA","sourcesContent":["import React, {useState, useContext} from 'react';\r\nimport { Platform, ActivityIndicator } from 'react-native';\r\n\r\nimport { AuthContext } from '../../contexts/auth';\r\n\r\nimport { Background, Container, Logo, AreaInput, Input, SubmitButton, \r\nSubmitText} from '../SignIn/styles';\r\n\r\nexport default function SignUp() {\r\n  const [nome, setNome] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  \r\n  const { signUp, loadingAuth} = useContext(AuthContext);\r\n\r\n  function handleSignUp(){\r\n    signUp(email, password, nome);\r\n  }\r\n \r\n return (\r\n   <Background>\r\n      <Container\r\n      behavior={Platform.OS === 'ios' ? 'padding' : ''}\r\n      enabled\r\n      >\r\n\r\n        <AreaInput>\r\n          <Input\r\n          placeholder=\"Nome\"\r\n          autoCorrect={false}\r\n          autoCapitalize=\"none\"\r\n          value={nome}\r\n          onChangeText={ (text) => setNome(text) }\r\n          />\r\n        </AreaInput>\r\n\r\n        <AreaInput>\r\n          <Input\r\n          placeholder=\"Email\"\r\n          autoCorrect={false}\r\n          autoCapitalize=\"none\"\r\n          value={email}\r\n          onChangeText={ (text) => setEmail(text) }\r\n          />\r\n        </AreaInput>\r\n\r\n        <AreaInput>\r\n          <Input\r\n          placeholder=\"Senha\"\r\n          autoCorrect={false}\r\n          autoCapitalize=\"none\"\r\n          value={password}\r\n          onChangeText={ (text) => setPassword(text) }\r\n          secureTextEntry={true}\r\n          />\r\n        </AreaInput>\r\n\r\n      <SubmitButton onPress={handleSignUp}>\r\n        {\r\n            loadingAuth ? (\r\n              <ActivityIndicator size={20} color=\"#FFF\" />\r\n            ) : (\r\n              <SubmitText>Cadastrar</SubmitText>\r\n            )\r\n        }\r\n      </SubmitButton>\r\n\r\n      </Container>\r\n   </Background>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}