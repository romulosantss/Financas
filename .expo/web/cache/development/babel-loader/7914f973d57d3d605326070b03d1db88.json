{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from \"../../contexts/auth\";\nimport { Background, Container, Logo, AreaInput, Input, SubmitButton, SubmitText, Link, LinkText } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignIn() {\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useContext = useContext(AuthContext),\n      signIn = _useContext.signIn,\n      loadingAuth = _useContext.loadingAuth;\n\n  function handleLogin() {\n    signIn(email, password);\n  }\n\n  return _jsx(Background, {\n    children: _jsxs(Container, {\n      behavior: Platform.OS === 'ios' ? 'padding' : '',\n      enabled: true,\n      children: [_jsx(Logo, {\n        source: require(\"../../assets/Logo.png\")\n      }), _jsx(AreaInput, {\n        children: _jsx(Input, {\n          placeholder: \"Email\",\n          autoCorrect: false,\n          autoCapitalize: \"none\",\n          value: email,\n          onChangeText: function onChangeText(text) {\n            return setEmail(text);\n          }\n        })\n      }), _jsx(AreaInput, {\n        children: _jsx(Input, {\n          placeholder: \"Senha\",\n          autoCorrect: false,\n          autoCapitalize: \"none\",\n          value: password,\n          onChangeText: function onChangeText(text) {\n            return setPassword(text);\n          },\n          secureTextEntry: true\n        })\n      }), _jsx(SubmitButton, {\n        onPress: handleLogin,\n        children: loadingAuth ? _jsx(ActivityIndicator, {\n          size: 20,\n          color: \"#FFF\"\n        }) : _jsx(SubmitText, {\n          children: \"Acessar\"\n        })\n      }), _jsx(Link, {\n        onPress: function onPress() {\n          return navigation.navigate('SignUp');\n        },\n        children: _jsx(LinkText, {\n          children: \"Criar uma conta!\"\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/RML-R/Documents/Estudos/app/AppFinancas/src/pages/SignIn/index.js"],"names":["React","useState","useContext","useNavigation","AuthContext","Background","Container","Logo","AreaInput","Input","SubmitButton","SubmitText","Link","LinkText","SignIn","navigation","email","setEmail","password","setPassword","signIn","loadingAuth","handleLogin","Platform","OS","require","text","navigate"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,WAAT;AAEA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,IAAhC,EAAsCC,SAAtC,EAAiDC,KAAjD,EAAwDC,YAAxD,EACAC,UADA,EACYC,IADZ,EACkBC,QADlB;;;AAGA,eAAe,SAASC,MAAT,GAAkB;AAC/B,MAAMC,UAAU,GAAGZ,aAAa,EAAhC;;AAGA,kBAA0BF,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOe,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgChB,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOiB,QAAP;AAAA,MAAiBC,WAAjB;;AACA,oBAAgCjB,UAAU,CAACE,WAAD,CAA1C;AAAA,MAAQgB,MAAR,eAAQA,MAAR;AAAA,MAAgBC,WAAhB,eAAgBA,WAAhB;;AAGA,WAASC,WAAT,GAAsB;AACpBF,IAAAA,MAAM,CAACJ,KAAD,EAAQE,QAAR,CAAN;AACD;;AAEF,SACE,KAAC,UAAD;AAAA,cACG,MAAC,SAAD;AACA,MAAA,QAAQ,EAAEK,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,EAD9C;AAEA,MAAA,OAAO,MAFP;AAAA,iBAIE,KAAC,IAAD;AAAM,QAAA,MAAM,EAAEC,OAAO;AAArB,QAJF,EAME,KAAC,SAAD;AAAA,kBACE,KAAC,KAAD;AACA,UAAA,WAAW,EAAC,OADZ;AAEA,UAAA,WAAW,EAAE,KAFb;AAGA,UAAA,cAAc,EAAC,MAHf;AAIA,UAAA,KAAK,EAAET,KAJP;AAKA,UAAA,YAAY,EAAG,sBAACU,IAAD;AAAA,mBAAUT,QAAQ,CAACS,IAAD,CAAlB;AAAA;AALf;AADF,QANF,EAgBE,KAAC,SAAD;AAAA,kBACE,KAAC,KAAD;AACA,UAAA,WAAW,EAAC,OADZ;AAEA,UAAA,WAAW,EAAE,KAFb;AAGA,UAAA,cAAc,EAAC,MAHf;AAIA,UAAA,KAAK,EAAER,QAJP;AAKA,UAAA,YAAY,EAAG,sBAACQ,IAAD;AAAA,mBAAUP,WAAW,CAACO,IAAD,CAArB;AAAA,WALf;AAMA,UAAA,eAAe,EAAE;AANjB;AADF,QAhBF,EA2BA,KAAC,YAAD;AAAc,QAAA,OAAO,EAAEJ,WAAvB;AAAA,kBAEID,WAAW,GACT,KAAC,iBAAD;AAAmB,UAAA,IAAI,EAAE,EAAzB;AAA6B,UAAA,KAAK,EAAC;AAAnC,UADS,GAGT,KAAC,UAAD;AAAA;AAAA;AALN,QA3BA,EAqCA,KAAC,IAAD;AAAM,QAAA,OAAO,EAAG;AAAA,iBAAMN,UAAU,CAACY,QAAX,CAAoB,QAApB,CAAN;AAAA,SAAhB;AAAA,kBACE,KAAC,QAAD;AAAA;AAAA;AADF,QArCA;AAAA;AADH,IADF;AA8CA","sourcesContent":["import React, {useState, useContext} from 'react';\r\nimport { Platform, ActivityIndicator } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { AuthContext } from '../../contexts/auth';\r\n\r\nimport { Background, Container, Logo, AreaInput, Input, SubmitButton, \r\nSubmitText, Link, LinkText} from './styles';\r\n\r\nexport default function SignIn() {\r\n  const navigation = useNavigation();\r\n\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const { signIn, loadingAuth } = useContext(AuthContext);\r\n\r\n\r\n  function handleLogin(){\r\n    signIn(email, password);\r\n  }\r\n\r\n return (\r\n   <Background>\r\n      <Container\r\n      behavior={Platform.OS === 'ios' ? 'padding' : ''}\r\n      enabled\r\n      >\r\n        <Logo source={require('../../assets/Logo.png')}/>\r\n        \r\n        <AreaInput>\r\n          <Input\r\n          placeholder=\"Email\"\r\n          autoCorrect={false}\r\n          autoCapitalize=\"none\"\r\n          value={email}\r\n          onChangeText={ (text) => setEmail(text) }\r\n          />\r\n        </AreaInput>\r\n\r\n        <AreaInput>\r\n          <Input\r\n          placeholder=\"Senha\"\r\n          autoCorrect={false}\r\n          autoCapitalize=\"none\"\r\n          value={password}\r\n          onChangeText={ (text) => setPassword(text) }\r\n          secureTextEntry={true}\r\n          />\r\n        </AreaInput>\r\n\r\n      <SubmitButton onPress={handleLogin}>\r\n        {\r\n          loadingAuth ? (\r\n            <ActivityIndicator size={20} color=\"#FFF\" />\r\n          ) : (\r\n            <SubmitText>Acessar</SubmitText>\r\n          )\r\n        }\r\n      </SubmitButton>\r\n\r\n      <Link onPress={ () => navigation.navigate('SignUp')}>\r\n        <LinkText>Criar uma conta!</LinkText>\r\n      </Link>\r\n\r\n      </Container>\r\n   </Background>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}